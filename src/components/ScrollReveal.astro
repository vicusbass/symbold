---
interface Props {
  delay?: number;
  class?: string;
  delayed?: boolean;
}

const { delay = 800, class: className = '', delayed = false } = Astro.props;
---

<div
  class={`fade-in-scroll ${className}`}
  data-scroll-animation
  data-delay={delay}
  data-delayed={delayed}
>
  <slot />
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -100px 0px',
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const delay = parseInt(entry.target.getAttribute('data-delay') || '800');
          const delayed = entry.target.getAttribute('data-delayed') === 'true';
          const extraDelay = delayed ? 800 : 0;
          setTimeout(() => {
            entry.target.classList.add('visible');
          }, delay + extraDelay);
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);

    document.querySelectorAll('[data-scroll-animation]').forEach((el) => {
      observer.observe(el);
    });
  });
</script>
