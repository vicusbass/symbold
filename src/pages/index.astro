---
import { Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import Button from '../components/Button.astro';
import ScrollReveal from '../components/ScrollReveal.astro';
import MuxVideo from '../components/MuxVideo.astro';
import FeaturedProjectMedia from '../components/FeaturedProjectMedia.astro';
import hero from '../assets/hero.png';
import heroMobile from '../assets/hero-mobile.png';
import BaselineReveal from '../components/BaselineReveal.astro';
import { client, urlFor } from '../lib/sanity';
import { mainPageQuery } from '../lib/queries/mainPage';
import type { MainPage } from '../types/sanity';

// Fetch MainPage data from Sanity
const mainPage = await client.fetch<MainPage>(mainPageQuery);
---

<Layout title="Symbold">
  <section id="headers" class="content-padding">
    <BaselineReveal>
      <h1 class="page-title">brutally honest <br /> branding</h1>
    </BaselineReveal>
    <BaselineReveal delayed>
      <h2 class="mt-2 text-base font-medium md:text-2xl">
        we create conceptual, ambitious, and profound brand identities.
      </h2>
    </BaselineReveal>

    <Button class="mt-10" href="/contact">Work with us</Button>
  </section>

  <section id="hero" class="edge-padding relative mt-10 w-full md:mt-40">
    {
      mainPage?.hero ? (
        <>
          {/* Mobile Hero */}
          {mainPage.hero.mobileMediaType === 'image' && mainPage.hero.mobileImage ? (
            <Image
              src={urlFor(mainPage.hero.mobileImage)?.url() || ''}
              alt={mainPage.hero.mobileImage.alt || 'Hero'}
              class="h-auto w-full overflow-hidden rounded-md md:hidden"
              inferSize
            />
          ) : mainPage.hero.mobileMediaType === 'video' &&
            mainPage.hero.mobileVideo?.asset?.playbackId ? (
            <div class="overflow-hidden rounded-md md:hidden">
              <MuxVideo
                playbackId={mainPage.hero.mobileVideo.asset.playbackId}
                videoTitle={mainPage.title || 'Hero Video'}
                mobileAspectRatio
              />
            </div>
          ) : null}

          {/* Desktop Hero */}
          {mainPage.hero.mediaType === 'image' && mainPage.hero.image ? (
            <Image
              src={urlFor(mainPage.hero.image)?.url() || ''}
              alt={mainPage.hero.image.alt || 'Hero'}
              class="hidden h-auto w-full overflow-hidden rounded-md md:block"
              inferSize
            />
          ) : mainPage.hero.mediaType === 'video' && mainPage.hero.video?.asset?.playbackId ? (
            <div class="hidden overflow-hidden rounded-md md:block">
              <MuxVideo
                playbackId={mainPage.hero.video.asset.playbackId}
                videoTitle={mainPage.title || 'Hero Video'}
              />
            </div>
          ) : null}
        </>
      ) : (
        <>
          {/* Fallback to static assets if no Sanity data */}
          <Image src={heroMobile} alt="Hero" class="h-auto w-full rounded-md md:hidden" />
          <Image src={hero} alt="Hero" class="hidden h-auto w-full rounded-md md:block" />
        </>
      )
    }
  </section>

  <ScrollReveal>
    <h2
      id="branding-h2"
      class="edge-padding mt-20 text-center text-xl leading-tight font-bold md:mt-60 md:text-4xl"
    >
      We don't make the logo bigger.
      <br />
      We craft strategic, bold brands that move businesses forward.
      <br />
      We are agile, efficient & creative
    </h2>
  </ScrollReveal>

  {
    mainPage?.featuredProjects?.projects && mainPage.featuredProjects.projects.length >= 3 && (
      <section id="featured-projects" class="edge-padding mt-20 md:mt-60">
        {/* First featured project - full width */}
        <ScrollReveal>
          <FeaturedProjectMedia project={mainPage.featuredProjects.projects[0]} />
        </ScrollReveal>

        {/* Second and third featured projects - side by side */}
        <div class="mt-4 flex flex-col gap-4 md:flex-row md:gap-4">
          <ScrollReveal class="w-full md:w-1/2">
            <FeaturedProjectMedia project={mainPage.featuredProjects.projects[1]} />
          </ScrollReveal>

          <ScrollReveal delayed class="w-full md:w-1/2">
            <FeaturedProjectMedia project={mainPage.featuredProjects.projects[2]} />
          </ScrollReveal>
        </div>
      </section>
    )
  }

  <ScrollReveal>
    <a href="/work" class="link-primary mt-10 block text-center">See our work</a>
  </ScrollReveal>

  <ScrollReveal>
    <h2
      class="edge-padding mx-auto mt-10 w-full text-center text-xl leading-tight font-bold md:mt-30 md:w-1/2 md:text-4xl"
    >
      We are not for everyone.
      <br />
      Symbold partners only with visionaries who value design as strategy, not decoration.
    </h2>
  </ScrollReveal>

  <div class="content-padding mt-30 flex items-center justify-center">
    <Button href="/contact">Work with us</Button>
  </div>

  <div class="content-padding">
    <hr class="mt-30 mb-10 md:mb-30" />
  </div>
</Layout>

<script>
  // Scroll-driven accent background alpha for #branding-h2
  document.addEventListener('astro:page-load', () => {
    const heading = document.getElementById('branding-h2');
    if (!heading) return;

    // Resolve accent color from CSS variable (expects hex like #RRGGBB)
    const accentHex =
      getComputedStyle(document.documentElement).getPropertyValue('--color-accent').trim() ||
      '#44ff00';

    function hexToRgb(hex: string) {
      const clean = hex.replace('#', '');
      const bigint = parseInt(clean, 16);
      return {
        r: (bigint >> 16) & 255,
        g: (bigint >> 8) & 255,
        b: bigint & 255,
      };
    }

    let ticking = false;

    function updateBg() {
      const rect = heading!.getBoundingClientRect(); // heading guarded above; non-null assertion for TS
      const headingCenter = rect.top + rect.height / 2;
      const viewportCenter = window.innerHeight / 2;
      const distance = Math.abs(headingCenter - viewportCenter);

      // Max distance at which alpha becomes 0 (tweakable). Using half viewport height.
      const isMobile = window.innerWidth <= 768;
      const distanceTweak = isMobile ? 0.5 : 0.8;
      const maxDistance = window.innerHeight * distanceTweak;
      const rawAlpha = 1 - Math.min(distance / maxDistance, 1);
      const alpha = Math.max(0, rawAlpha); // clamp to [0,1]

      if (alpha <= 0) {
        document.body.style.backgroundColor = '#ffffff';
      } else {
        document.body.style.backgroundColor = `rgba(68, 255, 0, ${alpha.toFixed(3)})`;
      }
      ticking = false;
    }

    function requestUpdate() {
      if (!ticking) {
        requestAnimationFrame(updateBg);
        ticking = true;
      }
    }

    window.addEventListener('scroll', requestUpdate, { passive: true });
    window.addEventListener('resize', requestUpdate);

    // Initial paint
    updateBg();
  });
</script>
